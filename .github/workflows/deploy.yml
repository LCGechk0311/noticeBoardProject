name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.17.1'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t leechanggeun/my-app-lee:latest .
          docker push leechanggeun/my-app-lee:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/noticeBoardProject
            git pull origin main

            sed -i '/JWT_SECRET_KEY/d' .env
            sed -i '/AWS_SECRET_ACCESS_KEY/d' .env
            sed -i '/AWS_ACCESS_KEY/d' .env
            sed -i '/AWS_ACCESS_KEY_ID/d' .env
            sed -i '/AWS_SECRET_KEY/d' .env
            sed -i '/AWS_DEFAULT_REGION/d' .env
            sed -i '/AWS_S3_BUCKET_NAME/d' .env

            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
            echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> .env
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
            echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> .env
            echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> .env
            echo "AWS_S3_BUCKET_NAME=${{ secrets.AWS_S3_BUCKET_NAME }}" >> .env

            sudo usermod -aG docker $USER
            newgrp docker

            docker-compose down
            docker-compose up -d --build