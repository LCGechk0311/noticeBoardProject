// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  userName  String
  refreshToken  String?  @db.Text
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
  boards    Board[]
  comments  Comment[]
  role      String   @default("user")
  deletedAt DateTime?
}

model Board {
  id        String   @id @default(uuid())
  title     String
  content   String
  authorId  String
  category    PostCategory
  views       Int      @default(0)
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
  comments  Comment[]
  imageUrl  String?
  deletedAt DateTime?

  author    User     @relation(fields: [authorId], references: [id])
}

enum PostCategory {
  NOTICES
  QNA
  INQUIRY
}

model Comment {
  id        String      @id @default(uuid())
  content   String
  boardId    String
  authorId  String
  parentId  String?     // This is for replies to comments
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())
  deletedAt DateTime?
  
  board      Board        @relation(fields: [boardId], references: [id])
  author    User        @relation(fields: [authorId], references: [id])
  parent    Comment?    @relation("Replies", fields: [parentId], references: [id])
  replies   Comment[]   @relation("Replies")
}